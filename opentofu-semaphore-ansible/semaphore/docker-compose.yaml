services:
    mysql:
        image: mysql:8.0
        restart: unless-stopped
        # hostname: mysql
        environment:
            MYSQL_USER: semaphore
            MYSQL_PASSWORD: semaphore
            MYSQL_DATABASE: semaphore
            MYSQL_RANDOM_ROOT_PASSWORD: yes
        volumes:
            - mysql_data:/var/lib/mysql
            - ./init-mysql.sql:/docker-entrypoint-initdb.d/init-mysql.sql:ro
        networks:
            - semaphore_network
        healthcheck:
            test: ["CMD","mysqladmin","ping","-h","localhost","-u","semaphore","-psemaphore"]
            timeout: 10s
            retries: 5
            interval: 30s

    semaphore:
        build:
            context: .
            dockerfile: Dockerfile

       
        restart: unless-stopped
        depends_on:
            mysql:
                condition: service_healthy
        ports:
            - 3000:3000
        # image: semaphoreui/semaphore:v2.15.0
        
        environment:
            SEMAPHORE_DB_DIALECT: mysql
            SEMAPHORE_DB_HOST: mysql
            SEMAPHORE_DB_NAME: semaphore
            SEMAPHORE_DB_USER: semaphore
            SEMAPHORE_DB_PASS: semaphore
            SEMAPHORE_ADMIN: admin
            SEMAPHORE_ADMIN_PASSWORD: semaphorepassword
            SEMAPHORE_ADMIN_NAME: admin
            SEMAPHORE_ADMIN_EMAIL: admin@localhost
            SEMAPHORE_PLAYBOOK_PATH: /tmp/semaphore/
            
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ../ansbile:/mnt/localproject/ansible:ro
            - ../opentofu:/mnt/localproject/opentofu:ro
            - ../requirements.txt:/etc/semaphore/requirements.txt:ro 
            - semaphore_data:/tmp/semaphore
        networks:
            - semaphore_network
        healthcheck:
            test: ["CMD","curl","-f","http://localhost:3000/api/ping"]
            timeout: 10s
            retries: 5
            interval: 30s

volumes:
    mysql_data: {driver: local}
    
    semaphore_data: {driver: local}

networks:
    semaphore_network: {driver: "bridge"}